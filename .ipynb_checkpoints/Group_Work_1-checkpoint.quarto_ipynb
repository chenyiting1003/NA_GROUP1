{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "bibliography: NA_GROUP1/reference_0013.bib\n",
        "csl: NA_GROUP1/ucl-university-college-harvard.csl\n",
        "title: Group Name's Group Project\n",
        "execute:\n",
        "  echo: false\n",
        "  freeze: true\n",
        "downloads:\n",
        "  - url: 'https://github.com/chenyiting1003/NA_GROUP1/blob/main/reference_0013.bib'\n",
        "    path: reference_0013.bib\n",
        "  - url: 'https://example.com/harvard-cite-them-right.csl'\n",
        "    path: harvard-cite-them-right.csl\n",
        "format:\n",
        "  html:\n",
        "    code-copy: true\n",
        "    code-link: true\n",
        "    toc: true\n",
        "    toc-title: On this page\n",
        "    toc-depth: 2\n",
        "    toc_float:\n",
        "      collapsed: false\n",
        "      smooth_scroll: true\n",
        "  pdf:\n",
        "    include-in-header:\n",
        "      text: |\n",
        "        \\addtokomafont{disposition}{\\rmfamily}\n",
        "    mainfont: Spectral\n",
        "    sansfont: Roboto Flex\n",
        "    monofont: InputMonoCondensed\n",
        "    papersize: a4\n",
        "    geometry:\n",
        "      - top=25mm\n",
        "      - left=40mm\n",
        "      - right=30mm\n",
        "      - bottom=25mm\n",
        "      - heightrounded\n",
        "    toc: false\n",
        "    number-sections: false\n",
        "    colorlinks: true\n",
        "    highlight-style: github\n",
        "jupyter:\n",
        "  jupytext:\n",
        "    text_representation:\n",
        "      extension: .qmd\n",
        "      format_name: quarto\n",
        "      format_version: '1.0'\n",
        "      jupytext_version: 1.16.4\n",
        "  kernelspec:\n",
        "    display_name: Python (base)\n",
        "    language: python\n",
        "    name: base\n",
        "---"
      ],
      "id": "183171d4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "import os\n",
        "import pandas as pd"
      ],
      "id": "536818e2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "host = 'https://orca.casa.ucl.ac.uk'\n",
        "path = '~jreades/data'\n",
        "file = '20240614-London-listings.parquet'\n",
        "if os.path.exists(file):\n",
        "  df = pd.read_parquet(file)\n",
        "else: \n",
        "  df = pd.read_parquet(f'{host}/{path}/{file}')\n",
        "  df.to_parquet(file)"
      ],
      "id": "e1242525",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "\n",
        "title: 1. Who collected the InsideAirbnb data?\n",
        "\n",
        "---\n",
        "\n",
        "The data is sourced from publicly available information on the Airbnb website and is analyzed, cleaned, and aggregated for public discussion [@inside_airbnb_about]. Key contributors include the founder and collaborators who developed tools to enhance data transparency, such as automating search functionality and stabilizing the platform’s code [@inside_airbnb_about; @alsudais_incorrect_2021].\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "## 2. Why did they collect the InsideAirbnb data?\n",
        "\n",
        "Inside Airbnb collects data to enhance transparency by addressing incomplete and biased reports(Inside Airbnb, n.d.; Alsudais, 2021). Studies show that short-term rentals disrupt communities, drive gentrification, and exacerbate housing inequities in cities like New York, London, and Nanjing (Jiao & Bai, 2020; Wachsmuth & Weisler, 2018; Sun et al., 2021).\n",
        "To promote housing equity, Inside Airbnb focuses on:\n",
        "Increasing Transparency: Highlight the effects of short-term rentals on housing availability and affordability (Inside Airbnb, n.d.; Garcia-Ayllon, 2018).\n",
        "Supporting Policy Development: Provide actionable data to regulate short-term rentals and tackle urban challenges (UK Government, 2023; Jiao & Bai, 2020).\n"
      ],
      "id": "18297286"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| output: asis\n",
        "print(f\"One of way to embed output in the text looks like this: after cleaning, we were left with {df.shape[0]:,} rows of data.\")"
      ],
      "id": "63f74c1e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "This way is also supposed to work (`{python} f\"{df.shape[0]:,}\"`) but I've found it less reliable.\n"
      ],
      "id": "21890442"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "ax = df.host_listings_count.plot.hist(bins=50);\n",
        "ax.set_xlim([0,500]);"
      ],
      "id": "a3057316",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## 3. How was the InsideAirbnb data collected?\n",
        "\n",
        "Inside Airbnb relies on publicly accessible data to analyze the platform’s impact on housing and communities.\n",
        "Using web scraping, it extracts and aggregates information such as listings, prices, calendars, reviews, and host details from Airbnb’s website, which is then cleaned and prepared for public discussions and policymaking(Inside Airbnb, n.d). Meanwhile, Airbnb processes proprietary user interaction data through its User Signals Platform (USP), employing real-time analytics to support applications like personalization and market segmentation(Jiao & Bai, 2020).\n",
        "\n",
        "\n",
        "## 4. How does the method of collection impact the completeness and/or accuracy of the InsideAirbnb data set's representation of the process it seeks to study, and what wider issues does this raise?\n",
        "\n",
        "1. **Impact on Data Completeness and Accuracy**\n",
        "\n",
        "Inside Airbnb data is gathered through web scraping. It may exclude some listings due to technical or legal barriers, such as anti-scraping technologies deployed by Airbnb (API Terms of Service, 2023). In addition, data collection is done at intervals, which means dynamic changes such as new or deleted lists can be missed. (Gurran & Phibbs, 2017)  And the data collection method may underrate the number of listings. This factor contribute to data gaps, potentially overlooking numerous active listings and limiting the accuracy of analyses (Adamiak, 2019).\n",
        "\n",
        "**2.Limitations in Timeliness and Geographic Representation in Reflecting Airbnb Data**\n",
        "\n",
        "InsideAirbnb's data collection method relies on periodic snapshots, with updates occurring every few months. This frequency means it may miss real-time changes, such as new or removed listings, limiting its ability to capture the dynamic nature of Airbnb’s platform. (Gurran & Phibbs, 2017)Additionally, although InsideAirbnb gathers data from cities in dozens of countries, it does not cover all Airbnb regions, which restricts its ability to fully represent the broader market. This affects the accuracy of its representation of Airbnb's operations across different geographical areas (InsideAirbnb, 2023).\n",
        "\n",
        "**3.wider issues**\n",
        "\n",
        "On one hand, the possibility that research using this dataset could unintentionally reinforce biases in the representation of the Airbnb market, leading to skewed conclusions about the platform’s impact (Adamiak, 2019). Additionally, such research might focus on easily accessible data, like listing distribution and pricing, while overlooking more complex phenomena, such as user behavior or platform strategies. (Comptroller's Office, 2018)On the other hand, scraping data without explicit consent from hosts or Airbnb itself could raise ethical concerns, especially when dealing with sensitive information like earnings or availability 。(Floridi and Taddeo, 2016).\n",
        "\n",
        "\n",
        "## 5. What ethical considerations does the use of the InsideAirbnb data raise?\n",
        "\n",
        "Firstly, the Inside Airbnb is supposed to protect the privacy of the hosts. While Inside Airbnb asserts that it avoids using personal information and processes data carefully (Inside Airbnb, n.d.), the raw data scraped from Airbnb’s website often includes host names, housing locations, and other sensitive information. Even when locations are obfuscated, the inclusion of identifiable data challenges the hosts' right to privacy.\n",
        "Compared with privacy rights, the right to know how the hosts’ information is being used is well protected by Airbnb and Inside Airbnb. As the privacy policies of Airbnb (Airbnb, n.d.)maintained, the types of personal information they collected are clearly shown on the website. The process and targets of using these data are also informed and legally guaranteed. Once these policies are changed greatly, they will connect the hosts. Hosts also enter into contracts with Airbnb, consenting to the use of their information. However, a key concern is whether hosts fully comprehend these contractual terms (Airbnb, n.d.).\n",
        "Finally, the legality of the use of Inside Airbnb data is doubtful. Inside Airbnb made use of the skill of web scraping to get the data from Airbnb instead of getting an API from the platform, which is explicitly forbidden by the terms of service from Airbnb (Airbnb, n.d.) . Moreover, this data acquisition process broke the laws of many regions around the world such as General Data Protection Regulation (GDPA) of Europe and the Privacy Act of Australia (Intersoft Consulting, 2018; Australia Government, 1988). Although Airbnb has got permissions from the hosts to deal with the sensitive data, Inside Airbnb did not carry out this procedure.\n",
        "With regard to the indirect ethical influence of using data from Inside Airbnb, the problems of discrimination and inequality can be caused. For instance, according to Wachsmuth and Weisler (2018), certain communities may be over-labeled after the analysis through Inside Airbnb data, especially those exist gentrification phenomenon. At the meantime, as Horn & Merante (2017) mentioned, Inside Airbnb has a high coverage of popular cities or areas. However, there are insufficient listings for those remote regions and markets that are lack of popularity.\n",
        "\n",
        "\n",
        "## 6. With reference to the InsideAirbnb data (*i.e.* using numbers, figures, maps, and descriptive statistics), what does an analysis of Hosts and Listing types suggest about the nature of Airbnb lets in London?\n",
        "\n",
        "::: duedate\n",
        "( 15 points; Answer due {{< var assess.group-date >}} )\n",
        ":::\n"
      ],
      "id": "e6d00501"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "import geopandas as gpd\n",
        "import matplotlib.pyplot as plt\n",
        "from matplotlib.lines import Line2D\n",
        "from matplotlib.patches import Patch\n",
        "import requests\n",
        "import gzip\n",
        "import io\n",
        "\n",
        "# 1. 定义文件的 URL\n",
        "url = \"https://data.insideairbnb.com/united-kingdom/england/london/2024-09-06/data/listings.csv.gz\"\n",
        "\n",
        "# 2. 下载文件\n",
        "response = requests.get(url)\n",
        "if response.status_code == 200:\n",
        "    print(\"文件下载成功\")\n",
        "else:\n",
        "    raise Exception(f\"无法下载文件，状态码: {response.status_code}\")\n",
        "\n",
        "# 3. 读取压缩文件\n",
        "with gzip.GzipFile(fileobj=io.BytesIO(response.content)) as gz:\n",
        "    listings = pd.read_csv(gz)"
      ],
      "id": "0c1d28c8",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from tabulate import tabulate  # 用于格式化表格输出\n",
        "\n",
        "# 确保 host_id 唯一化\n",
        "unique_hosts = listings[['host_id', 'host_total_listings_count', 'room_type']].drop_duplicates()\n",
        "\n",
        "# 创建分组范围\n",
        "bins = [0, 1, 2, 3, 10, 50, 100, 200, float('inf')]\n",
        "labels = ['1', '2', '3', '4 to 10', '11 to 50', '51 to 100', '101 to 200', '200 or more']\n",
        "unique_hosts['host_group'] = pd.cut(unique_hosts['host_total_listings_count'], bins=bins, labels=labels)\n",
        "\n",
        "# 计算人数和占比（基于唯一房东）\n",
        "grouped = unique_hosts.groupby('host_group', observed=False)\n",
        "summary = grouped.size().reset_index(name='Number of Hosts')\n",
        "summary['% of Hosts'] = (summary['Number of Hosts'] / summary['Number of Hosts'].sum() * 100).round(2)\n",
        "\n",
        "# 计算房源类型占比（基于唯一房东）\n",
        "room_type_counts = grouped['room_type'].value_counts(normalize=True).unstack(fill_value=0) * 100\n",
        "room_type_counts = room_type_counts.round(2)  # 保留两位小数\n",
        "\n",
        "# 确保房源类型仅保留 3 列\n",
        "room_type_counts = room_type_counts[['Entire home/apt', 'Private room', 'Shared room']]\n",
        "\n",
        "# 合并结果\n",
        "result = summary.merge(room_type_counts, left_on='host_group', right_index=True, how='left')\n",
        "\n",
        "# 重命名列以匹配表格格式\n",
        "result.columns = ['No. listings linked to host ID', 'Number of Hosts', '% of Hosts',\n",
        "                  '% Entire home/apt', '% Private room', '% Shared room']"
      ],
      "id": "ca482b1d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "# 原始数据（未包含 TOTAL 行）\n",
        "data = {\n",
        "    \"No. listings linked to host ID\": [\"1\", \"2\", \"3\", \"4 to 10\", \"11 to 50\", \"51 to 100\", \"101 to 200\", \"200 or more\"],\n",
        "    \"Number of Hosts\": [29616, 13236, 6177, 8820, 2298, 264, 88, 66],\n",
        "    \"% of Hosts\": [48.90, 21.85, 10.20, 14.56, 3.79, 0.44, 0.15, 0.11],\n",
        "    \"% Entire home/apt\": [62.34, 56.51, 55.76, 58.13, 68.89, 74.62, 73.86, 69.70],\n",
        "    \"% Private room\": [37.14, 42.91, 43.53, 41.00, 29.98, 22.35, 25.00, 24.24],\n",
        "    \"% Shared room\": [0.50, 0.57, 0.65, 0.62, 0.91, 0.76, 1.14, 3.03],\n",
        "}\n",
        "\n",
        "# 创建 DataFrame\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# 计算 TOTAL 行并限制为两位小数\n",
        "total_row = {\n",
        "    \"No. listings linked to host ID\": \"TOTAL\",\n",
        "    \"Number of Hosts\": df[\"Number of Hosts\"].sum(),\n",
        "    \"% of Hosts\": round(100.00, 2),\n",
        "    \"% Entire home/apt\": round((df[\"% Entire home/apt\"] * df[\"Number of Hosts\"]).sum() / df[\"Number of Hosts\"].sum(), 2),\n",
        "    \"% Private room\": round((df[\"% Private room\"] * df[\"Number of Hosts\"]).sum() / df[\"Number of Hosts\"].sum(), 2),\n",
        "    \"% Shared room\": round((df[\"% Shared room\"] * df[\"Number of Hosts\"]).sum() / df[\"Number of Hosts\"].sum(), 2),\n",
        "}\n",
        "\n",
        "# 添加 TOTAL 行\n",
        "df = pd.concat([df, pd.DataFrame([total_row])], ignore_index=True)\n",
        "\n",
        "# 限制所有小数列为两位小数\n",
        "decimal_columns = [\"% of Hosts\", \"% Entire home/apt\", \"% Private room\", \"% Shared room\"]\n",
        "df[decimal_columns] = df[decimal_columns].round(2)\n",
        "\n",
        "# 创建绘图\n",
        "fig, ax = plt.subplots(figsize=(15, 5))  # 设置图表大小\n",
        "ax.axis('tight')\n",
        "ax.axis('off')\n",
        "\n",
        "# 创建表格\n",
        "table = ax.table(\n",
        "    cellText=df.values,\n",
        "    colLabels=df.columns,\n",
        "    cellLoc='center',\n",
        "    loc='center'\n",
        ")\n",
        "\n",
        "# 设置表格样式\n",
        "table.auto_set_font_size(False)\n",
        "table.set_fontsize(10)\n",
        "\n",
        "# 调整列宽和行高\n",
        "row_height = 0.1  # 每行的高度\n",
        "first_col_width = 0.3  # 第一列宽度\n",
        "other_col_width = 0.15  # 其他列宽度\n",
        "\n",
        "# 遍历每个单元格，设置宽度和高度\n",
        "for (row, col), cell in table.get_celld().items():\n",
        "    cell.set_edgecolor('black')  # 设置边框颜色\n",
        "    cell.set_linewidth(0.8)  # 边框宽度\n",
        "\n",
        "    # 设置标题行样式\n",
        "    if row == 0:  # 标题行\n",
        "        cell.set_facecolor(\"#D9D9D9\")  # 灰色背景\n",
        "        cell.set_text_props(fontweight='bold')  # 加粗字体\n",
        "        row_height = 0.15\n",
        "    # 设置 TOTAL 行样式\n",
        "    elif row == len(df) :  # TOTAL 行\n",
        "        cell.set_facecolor(\"#D9D9D9\")  # 灰色背景\n",
        "        cell.set_text_props(fontweight='bold')  # 加粗字体\n",
        "    # 设置第二行样式\n",
        "    elif row == 1:  # 第二行\n",
        "        cell.set_facecolor(\"#D9EAF7\")  # 浅蓝色背景\n",
        "\n",
        "    # 设置列宽\n",
        "    if col == 0:  # 第一列\n",
        "        cell.set_width(first_col_width)\n",
        "    else:\n",
        "        cell.set_width(other_col_width)\n",
        "    # 设置行高\n",
        "    cell.set_height(row_height)\n",
        "\n",
        "# 显示表格\n",
        "plt.show()"
      ],
      "id": "fadc9fcb",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# GitHub 文件的 URL\n",
        "url = \"https://github.com/chenyiting1003/NA_GROUP1/raw/refs/heads/main/airbnb_borough_data_2019.csv\"\n",
        "\n",
        "# 读取 CSV 文件到 DataFrame\n",
        "airbnb_2019 = pd.read_csv(url)\n",
        "\n",
        "# 显示前几行数据\n",
        "print(airbnb_2019.head())"
      ],
      "id": "6efbfcb9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# 对 listings 数据按 neighbourhood_cleansed 和 room_type 进行统计\n",
        "listings_grouped = listings.groupby(['neighbourhood_cleansed', 'room_type']).size().unstack(fill_value=0).reset_index()\n",
        "\n",
        "# 动态处理列名\n",
        "listings_grouped.columns = ['Borough'] + listings_grouped.columns[1:].tolist()\n",
        "\n",
        "# 将 Borough 名称统一为小写，以便与 airbnb_2019 合并\n",
        "listings_grouped['Borough'] = listings_grouped['Borough'].str.lower()\n",
        "airbnb_2019['Borough'] = airbnb_2019['Borough'].str.lower()\n",
        "\n",
        "# 合并两个数据框\n",
        "combined_data = pd.merge(\n",
        "    airbnb_2019,\n",
        "    listings_grouped,\n",
        "    on='Borough',\n",
        "    how='outer',\n",
        "    suffixes=('_2019', '_2024')  # 为避免列名冲突添加后缀\n",
        ")\n",
        "\n",
        "# 填充缺失值为 0\n",
        "combined_data.fillna(0, inplace=True)\n",
        "\n",
        "# 删除 \"Total\" 和 \"Hotel room\" 列（如果存在）\n",
        "columns_to_drop = ['Total', 'Hotel room']\n",
        "cleaned_data = combined_data.drop(columns=[col for col in columns_to_drop if col in combined_data.columns])"
      ],
      "id": "e7b4ecee",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# 替换 Borough 列中指定的名称\n",
        "cleaned_data['Borough'] = cleaned_data['Borough'].replace({\n",
        "    'hammersmith and fulham': 'H&F',\n",
        "    'kensington and chelsea': 'K&C',\n",
        "    'barking and dagenham': 'B&D'\n",
        "}, regex=False)\n",
        "\n",
        "# 检查替换后的结果\n",
        "print(cleaned_data['Borough'].unique())"
      ],
      "id": "7b77a3ed",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import matplotlib.ticker as ticker\n",
        "\n",
        "# 定义 7 行 8 列布局的地理区域位置\n",
        "borough_layout = [\n",
        "    [None, None, None, None, \"Enfield\", None, None, None],\n",
        "    [None, None, None, \"Harrow\", \"Barnet\", \"Haringey\", \"Waltham Forest\", None],\n",
        "    [\"Hillingdon\", \"Ealing\", \"Brent\", \"Camden\", \"Islington\", \"Hackney\", \"Redbridge\", \"Havering\"],\n",
        "    [\"Hounslow\", \"H&F\", \"K&C\", \"Westminster\", \"City\", \"Tower Hamlets\", \"Newham\", \"B&D\"],\n",
        "    [None, \"Kingston\", \"Wandsworth\", \"Lambeth\", \"Southwark\", \"Lewisham\", \"Greenwich\", \"Bexley\"],\n",
        "    [None, None, \"Richmond\", \"Merton\", \"Croydon\", \"Bromley\", None, None],\n",
        "    [None, None, None, \"Sutton\", None, None, None, None],\n",
        "]\n",
        "\n",
        "# 设置统一的 Y 轴范围最大值为 12000\n",
        "y_max = 12000\n",
        "\n",
        "# 按指定颜色设置房源类型\n",
        "color_mapping = {\n",
        "    'Entire home/apt': \"#4472C4\",  # 蓝色\n",
        "    'Private room': \"#EDC586\",  # 黄色\n",
        "    'Shared room': \"#E86C74\",  # 红色\n",
        "}\n",
        "\n",
        "# 创建 7 行 8 列的画布和子图（调整间距使更紧凑）\n",
        "fig, axes = plt.subplots(nrows=7, ncols=8, figsize=(16, 12), gridspec_kw={'wspace': 0.1, 'hspace': 0.4})\n",
        "\n",
        "# 遍历布局并填充子图\n",
        "for i, row in enumerate(borough_layout):\n",
        "    for j, borough in enumerate(row):\n",
        "        ax = axes[i, j]\n",
        "        \n",
        "        if borough is None:  # 如果布局中没有对应的 Borough，则关闭子图\n",
        "            ax.axis(\"off\")\n",
        "            continue\n",
        "        \n",
        "        # 设置小图背景颜色为浅灰色\n",
        "        ax.set_facecolor(\"#F2F2F2\")\n",
        "        \n",
        "        # 移除子图的边框\n",
        "        for spine in ax.spines.values():\n",
        "            spine.set_visible(False)\n",
        "        \n",
        "        # 提取当前区域的数据\n",
        "        subset = cleaned_data[cleaned_data['Borough'].str.contains(borough, case=False)]\n",
        "        \n",
        "        # 准备绘图数据\n",
        "        years = [2019, 2024]  # 年份\n",
        "        room_types = ['Entire home/apt', 'Private room', 'Shared room']  # 房源类型\n",
        "        data = {\n",
        "            room: [subset[f\"{room}_2019\"].sum(), subset[f\"{room}_2024\"].sum()] \n",
        "            for room in room_types\n",
        "        }\n",
        "\n",
        "        # 创建堆叠面积图\n",
        "        bottom = [0] * len(years)  # 初始堆叠的底部\n",
        "        for room_type in room_types:\n",
        "            ax.fill_between(\n",
        "                years, bottom, [sum(x) for x in zip(bottom, data[room_type])],\n",
        "                label=room_type, alpha=0.9, color=color_mapping[room_type]\n",
        "            )\n",
        "            bottom = [sum(x) for x in zip(bottom, data[room_type])]  # 更新底部\n",
        "        \n",
        "        # 设置标题的背景框\n",
        "        title_text = borough.title()\n",
        "        ax.text(\n",
        "            0.5, 1.1, title_text,  # 标题位置\n",
        "            fontsize=10, color=\"#333333\", ha='center', va='center',\n",
        "            transform=ax.transAxes\n",
        "        )\n",
        "\n",
        "        ax.set_ylim(0, y_max)  # 设置统一的 Y 轴范围\n",
        "        \n",
        "        # 显示 X 和 Y 轴的逻辑\n",
        "        if borough in [\"Enfield\", \"Harrow\", \"Hillingdon\", \"Hounslow\", \"Kingston\", \"Richmond\", \"Sutton\"]:\n",
        "            # 显示 Y 轴刻度和标签\n",
        "            ax.set_yticks(range(0, y_max + 1, 3000))\n",
        "            ax.yaxis.set_major_formatter(ticker.StrMethodFormatter('{x:,.0f}'))  # 格式化刻度\n",
        "            ax.tick_params(axis='y', labelsize=8)\n",
        "            ax.set_ylabel(\"Listings\", fontsize=9)\n",
        "            \n",
        "            # 同时显示 X 轴刻度和标签\n",
        "            ax.set_xticks(years)\n",
        "            ax.set_xticklabels([\"2019\", \"2024\"], fontsize=9)\n",
        "        else:\n",
        "            # 隐藏 Y 轴刻度\n",
        "            ax.set_yticks(range(0, y_max + 1, 3000))\n",
        "            ax.tick_params(axis='y', labelsize=0)\n",
        "            \n",
        "            # 隐藏 X 轴刻度和标签\n",
        "            ax.set_xticks(years)\n",
        "            ax.tick_params(axis='x', labelsize=0)\n",
        "\n",
        "        # 添加网格线\n",
        "        ax.grid(visible=True, linestyle='--', linewidth=0.5, alpha=0.6)\n",
        "\n",
        "# 添加全局图例\n",
        "fig.subplots_adjust(bottom=0)  # 增加底部留白，将图例下移\n",
        "fig.legend(\n",
        "    color_mapping.keys(), loc=\"lower right\", ncol=3, fontsize=12, \n",
        "    title=\"Room Type\", title_fontsize=13, frameon=True\n",
        ")\n",
        "fig.suptitle(\"Number of Airbnb Listings in London Boroughs (2019 vs 2024)\", fontsize=18, fontweight='bold')\n",
        "plt.show()"
      ],
      "id": "d4477234",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## 7.Drawing on your previous answers, and supporting your response with evidence, how could the InsideAirbnb data set be used to inform the regulation of Short-Term Lets (STL) in London?\n",
        "\n",
        "hhhhh smile\n",
        "\n",
        "## \n",
        "\n",
        "## 7. Drawing on your previous answers, and supporting your response with evidence (*e.g.* figures, maps, EDA/ESDA, and simple statistical analysis/models drawing on experience from, e.g., CASA0007), how *could* the InsideAirbnb data set be used to inform the regulation of Short-Term Lets (STL) in London?\n",
        "\n",
        "::: duedate\n",
        "( 45 points; Answer due {{< var assess.group-date >}} )\n",
        ":::\n",
        "\n",
        "## Sustainable Authorship Tools\n",
        "\n",
        "Using the Terminal in Docker, you compile the Quarto report using `quarto render <group_submission_file>.qmd`.\n",
        "\n",
        "Your QMD file should automatically download your BibTeX and CLS files and any other required files. If this is done right after library loading then the entire report should output successfully.\n",
        "\n",
        "Written in Markdown and generated from [Quarto](https://quarto.org/). Fonts used: [Spectral](https://fonts.google.com/specimen/Spectral) (mainfont), [Roboto](https://fonts.google.com/specimen/Roboto) ([sansfont]{style=\"font-family:Sans-Serif;\"}) and [JetBrains Mono](https://fonts.google.com/specimen/JetBrains%20Mono) (`monofont`).\n",
        "\n",
        "## References\n",
        "\n",
        "## 7. Drawing on your previous answers, and supporting your response with evidence (e.g. figures, maps, EDA/ESDA, and simple statistical analysis/models drawing on experience from, e.g., CASA0007), how could the InsideAirbnb data set be used to inform the regulation of Short-Term Lets (STL) in London?\n",
        "\n",
        "## References"
      ],
      "id": "6a96ad3e"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python (base)",
      "language": "python",
      "name": "base"
    },
    "jupytext": {
      "text_representation": {
        "extension": ".qmd",
        "format_name": "quarto",
        "format_version": "1.0",
        "jupytext_version": "1.16.4"
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}