---
bibliography: bio.bib
csl: harvard-cite-them-right.csl
title: Group Name's Group Project
execute:
  echo: false
  freeze: true
format:
  html:
    code-copy: true
    code-link: true
    toc: true
    toc-title: On this page
    toc-depth: 2
    toc_float:
      collapsed: false
      smooth_scroll: true
  pdf:
    include-in-header:
      text: |
        \addtokomafont{disposition}{\rmfamily}
    mainfont: Spectral
    sansfont: Roboto Flex
    monofont: InputMonoCondensed
    papersize: a4
    geometry:
      - top=25mm
      - left=40mm
      - right=30mm
      - bottom=25mm
      - heightrounded
    toc: false
    number-sections: false
    colorlinks: true
    highlight-style: github
jupyter:
  jupytext:
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.16.4
  kernelspec:
    display_name: Python (base)
    language: python
    name: base
---

```{python}
#| echo: false
import os
import pandas as pd
```

```{python}
#| echo: false
host = 'https://orca.casa.ucl.ac.uk'
path = '~jreades/data'
file = '20240614-London-listings.parquet'

if os.path.exists(file):
  df = pd.read_parquet(file)
else: 
  df = pd.read_parquet(f'{host}/{path}/{file}')
  df.to_parquet(file)
```

## 1. Who collected the InsideAirbnb data?

The data on the Inside Airbnb website comes from publicly available information on the Airbnb website. 
It has been analyzed, cleaned and aggregated for public discussion. 
https://insideairbnb.com/

There are many people who have contributed to this. 
Murray Cox uses data, media, and technology for social change, and is the founder and current chief data activist at Inside Airbnb. 
John Morris is a founding collaborator on the website design and redesign and the creative producer of the project's main report. 
Tyler Higgins works to build and organize Inside Airbnb's data and activism community. 
Regarding past collaborators, Michael Ziggy Mintz is a fixture in New York City's civic and housing data community, and he worked on automating search for Airbnb. 
Anya Sophe Behn is one of the project's early collaborators, straddling technology and the arts, supporting the project's mission, stabilizing the search code, and moving the project to the cloud. 
https://insideairbnb.com/about/

::: duedate
( 2 points; Answer due Week 7 )
:::
An inline citation example: As discussed on @insideairbnb, there are many...

A parenthetical citation example: There are many ways to research Airbnb [see, for example, @insideairbnb]...

## 2. Why did they collect the InsideAirbnb data?

Inside Airbnb collects data to address the impact of Airbnb and similar short-term rental platforms on housing and communities. The key motivations and objectives include:

Driving Factors:

Addressing Misleading and Incomplete Data: Airbnb often downplays the role of large-scale landlords and fails to provide sufficient metrics for analyzing broader economic and social impacts.
Public Interest: Short-term rentals reduce housing availability, disrupt neighborhoods, and increase housing costs, creating the need for independent data to uncover these effects.

Objectives:

Increase Transparency: Highlight inaccuracies and omissions in Airbnb's official reports to provide a clearer understanding of short-term rental impacts.
Support Policy Development: Offer actionable data to governments and communities to help regulate short-term rentals effectively.
Promote Public Discourse: Empower activists, policymakers, scholars, and communities to better understand and discuss the impact of Airbnb on housing and neighborhoods.
The project aims to advocate for sustainable housing policies, empower local communities, and support housing activists, journalists, and researchers in addressing challenges posed by short-term rentals.

::: duedate
( 4 points; Answer due Week 7 )
:::

```{python}
#| output: asis
print(f"One of way to embed output in the text looks like this: after cleaning, we were left with {df.shape[0]:,} rows of data.")
```

This way is also supposed to work (`{python} f"{df.shape[0]:,}"`) but I've found it less reliable.

```{python}
ax = df.host_listings_count.plot.hist(bins=50);
ax.set_xlim([0,500]);
```

## 3. How was the InsideAirbnb data collected?

Inside Airbnb collects data from publicly available information on Airbnb’s website. This includes listings, prices, calendars, reviews, and host details. 
The data is extracted using Web Scraping technology, which parses webpage code to retrieve publicly displayed information. 
For instance, listing locations (obfuscated for privacy), host activity (e.g., managing multiple listings), and availability calendars are captured. 
The data is regularly updated to reflect the latest market trends and analyzed, cleaned, and aggregated to support public discussions and policymaking.

In contrast, Airbnb collects user interaction data through its User Signals Platform (USP). 
This platform uses advanced real-time stream processing to analyze user activities like searches, bookings, and listing views. 
The process involves:
Event Collection: User activities generate Kafka events, which are streamed to the system.
Data Transformation: Apache Flink processes these events, converting them into actionable "User Signals."
Data Storage: Transformed signals are stored in a Key-Value Store for real-time querying and analysis.
Session Insights: Techniques like session windowing (e.g., sliding windows) enable behavioral analysis over specific time frames.
Stability Mechanisms: Standby task managers ensure minimal downtime during system failures.

These methods enable Airbnb to process user actions for applications such as personalization, segmentation, 
and engagement analysis, while Inside Airbnb focuses on using publicly available data to analyze the platform's broader impact on housing and communities.


::: duedate
( 5 points; Answer due Week 8 )
:::

## 4. How does the method of collection impact the completeness and/or accuracy of the InsideAirbnb data set's representation of the process it seeks to study, and what wider issues does this raise?

::: duedate
( 11 points; Answer due Week 9 )
:::

## 5. What ethical considerations does the use of the InsideAirbnb data raise?

::: duedate
( 18 points; Answer due {{< var assess.group-date >}} )
:::

## 6. With reference to the InsideAirbnb data (*i.e.* using numbers, figures, maps, and descriptive statistics), what does an analysis of Hosts and Listing types suggest about the nature of Airbnb lets in London?

::: duedate
( 15 points; Answer due {{< var assess.group-date >}} )
:::

```{python}
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
from matplotlib.lines import Line2D
from matplotlib.patches import Patch
import requests
import gzip
import io

# 1. 定义文件的 URL
url = "https://data.insideairbnb.com/united-kingdom/england/london/2024-09-06/data/listings.csv.gz"

# 2. 下载文件
response = requests.get(url)
if response.status_code == 200:
    print("文件下载成功")
else:
    raise Exception(f"无法下载文件，状态码: {response.status_code}")

# 3. 读取压缩文件
with gzip.GzipFile(fileobj=io.BytesIO(response.content)) as gz:
    listings = pd.read_csv(gz)
```

```{python}
from tabulate import tabulate  # 用于格式化表格输出

# 假设数据已经加载为 DataFrame `listings`
# 数据应包含以下列：
# - 'host_total_listings_count' (每个房东的房源数量)
# - 'room_type' (房源类型: Entire home/apt, Private room, Shared room)

# 创建分组范围
bins = [0, 1, 2, 3, 10, 50, 100, 200, float('inf')]
labels = ['1', '2', '3', '4 to 10', '11 to 50', '51 to 100', '101 to 200', '200 or more']
listings['host_group'] = pd.cut(listings['host_total_listings_count'], bins=bins, labels=labels)

# 计算人数和占比
grouped = listings.groupby('host_group', observed=True)
summary = grouped.size().reset_index(name='Number of Hosts')
summary['% of Hosts'] = (summary['Number of Hosts'] / summary['Number of Hosts'].sum() * 100).round(2)

# 计算房源类型占比
room_type_counts = grouped['room_type'].value_counts(normalize=True).unstack(fill_value=0) * 100
room_type_counts = room_type_counts.round(2)  # 保留两位小数

# 确保房源类型仅保留 3 列
room_type_counts = room_type_counts[['Entire home/apt', 'Private room', 'Shared room']]

# 合并结果
result = summary.merge(room_type_counts, left_on='host_group', right_index=True, how='left')

# 示例数据
data = {
    "No. listings linked to host ID": ["1", "2", "3", "4 to 10", "11 to 50", "51 to 100", "101 to 200", "200 or more", "TOTAL"],
    "Number of Hosts": [29616, 15200, 8292, 17838, 13856, 5070, 2613, 3692, 96177],
    "% of Hosts": [30.79, 15.8, 8.62, 18.55, 14.41, 5.27, 2.72, 3.84, 100],
    "% Entire home/apt": [62.34, 55.24, 53.09, 56.4, 74.08, 79.15, 84.62, 95.12, 560.04],
    "% Private room": [37.14, 44.24, 46.29, 42.8, 25.27, 19.57, 15.35, 3.85, 234.51],
    "% Shared room": [0.5, 0.51, 0.54, 0.47, 0.53, 0.06, 0.04, 0.08, 2.73],
}

df = pd.DataFrame(data)

# 创建绘图
fig, ax = plt.subplots(figsize=(15, 5))  # 设置图表大小（适配行高增加）
ax.axis('tight')
ax.axis('off')

# 创建表格
table = ax.table(
    cellText=df.values,
    colLabels=df.columns,
    cellLoc='center',
    loc='center'
)

# 设置表格样式
table.auto_set_font_size(False)
table.set_fontsize(10)

# 调整列宽和行高
col_widths = {
    0: 0.25,  # 第一列较宽
    1: 0.15,  # 其他列等宽
    2: 0.15,
    3: 0.15,
    4: 0.15,
    5: 0.15,
    6: 0.15,
}

row_height = 0.1  # 每行的高度

# 遍历每个单元格，设置宽度和高度
for (row, col), cell in table.get_celld().items():
    cell.set_edgecolor('black')  # 设置边框颜色
    cell.set_linewidth(0.8)  # 边框宽度
    
    # 设置标题行样式
    if row == 0:  # 标题行
        cell.set_facecolor("#D9D9D9")  # 灰色背景
        cell.set_text_props(fontweight='bold')  # 加粗字体
        cell.set_width(col_widths[col])  # 调整列宽
        cell.set_height(row_height + 0.02)  # 标题行稍微高一些
    else:
        cell.set_width(col_widths[col])  # 调整内容列宽
        cell.set_height(row_height)  # 设置行高
    
    # 设置总计行背景色
    if row == len(df):  # 最后一行
        cell.set_facecolor("#D9D9D9")  # 灰色背景
        cell.set_text_props(fontweight='bold')  # 加粗字体
    
    # 设置第二行的背景色
    if row == 1:  # 第二行
        cell.set_facecolor("#D9EAF7")  # 设置浅灰色背景

# 显示图表
plt.show()
```

```{python}
# GitHub 文件的 URL
url = "https://github.com/chenyiting1003/NA_GROUP1/raw/refs/heads/main/airbnb_borough_data_2019.csv"

# 读取 CSV 文件到 DataFrame
airbnb_2019 = pd.read_csv(url)

# 显示前几行数据
print(airbnb_2019.head())
```

```{python}
# 对 listings 数据按 neighbourhood_cleansed 和 room_type 进行统计
listings_grouped = listings.groupby(['neighbourhood_cleansed', 'room_type']).size().unstack(fill_value=0).reset_index()

# 动态处理列名
listings_grouped.columns = ['Borough'] + listings_grouped.columns[1:].tolist()

# 将 Borough 名称统一为小写，以便与 airbnb_2019 合并
listings_grouped['Borough'] = listings_grouped['Borough'].str.lower()
airbnb_2019['Borough'] = airbnb_2019['Borough'].str.lower()

# 合并两个数据框
combined_data = pd.merge(
    airbnb_2019,
    listings_grouped,
    on='Borough',
    how='outer',
    suffixes=('_2019', '_2024')  # 为避免列名冲突添加后缀
)

# 填充缺失值为 0
combined_data.fillna(0, inplace=True)

# 删除 "Total" 和 "Hotel room" 列（如果存在）
columns_to_drop = ['Total', 'Hotel room']
cleaned_data = combined_data.drop(columns=[col for col in columns_to_drop if col in combined_data.columns])
```

```{python}
# 替换 Borough 列中指定的名称
cleaned_data['Borough'] = cleaned_data['Borough'].replace({
    'hammersmith and fulham': 'H&F',
    'kensington and chelsea': 'K&C',
    'barking and dagenham': 'B&D'
}, regex=False)

# 检查替换后的结果
print(cleaned_data['Borough'].unique())
```

```{python}
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

# 定义 7 行 8 列布局的地理区域位置
borough_layout = [
    [None, None, None, None, "Enfield", None, None, None],
    [None, None, None, "Harrow", "Barnet", "Haringey", "Waltham Forest", None],
    ["Hillingdon", "Ealing", "Brent", "Camden", "Islington", "Hackney", "Redbridge", "Havering"],
    ["Hounslow", "H&F", "K&C", "Westminster", "City", "Tower Hamlets", "Newham", "B&D"],
    [None, "Kingston", "Wandsworth", "Lambeth", "Southwark", "Lewisham", "Greenwich", "Bexley"],
    [None, None, "Richmond", "Merton", "Croydon", "Bromley", None, None],
    [None, None, None, "Sutton", None, None, None, None],
]

# 设置统一的 Y 轴范围最大值为 12000
y_max = 12000

# 按指定颜色设置房源类型
color_mapping = {
    'Entire home/apt': "#4472C4",  # 蓝色
    'Private room': "#EDC586",  # 黄色
    'Shared room': "#E86C74",  # 红色
}

# 创建 7 行 8 列的画布和子图（调整间距使更紧凑）
fig, axes = plt.subplots(nrows=7, ncols=8, figsize=(16, 12), gridspec_kw={'wspace': 0.1, 'hspace': 0.4})

# 遍历布局并填充子图
for i, row in enumerate(borough_layout):
    for j, borough in enumerate(row):
        ax = axes[i, j]
        
        if borough is None:  # 如果布局中没有对应的 Borough，则关闭子图
            ax.axis("off")
            continue
        
        # 设置小图背景颜色为浅灰色
        ax.set_facecolor("#F2F2F2")
        
        # 移除子图的边框
        for spine in ax.spines.values():
            spine.set_visible(False)
        
        # 提取当前区域的数据
        subset = cleaned_data[cleaned_data['Borough'].str.contains(borough, case=False)]
        
        # 准备绘图数据
        years = [2019, 2024]  # 年份
        room_types = ['Entire home/apt', 'Private room', 'Shared room']  # 房源类型
        data = {
            room: [subset[f"{room}_2019"].sum(), subset[f"{room}_2024"].sum()] 
            for room in room_types
        }

        # 创建堆叠面积图
        bottom = [0] * len(years)  # 初始堆叠的底部
        for room_type in room_types:
            ax.fill_between(
                years, bottom, [sum(x) for x in zip(bottom, data[room_type])],
                label=room_type, alpha=0.9, color=color_mapping[room_type]
            )
            bottom = [sum(x) for x in zip(bottom, data[room_type])]  # 更新底部
        
        # 设置标题的背景框
        title_text = borough.title()
        ax.text(
            0.5, 1.1, title_text,  # 标题位置
            fontsize=10, color="#333333", ha='center', va='center',
            transform=ax.transAxes
        )

        ax.set_ylim(0, y_max)  # 设置统一的 Y 轴范围
        
        # 显示 X 和 Y 轴的逻辑
        if borough in ["Enfield", "Harrow", "Hillingdon", "Hounslow", "Kingston", "Richmond", "Sutton"]:
            # 显示 Y 轴刻度和标签
            ax.set_yticks(range(0, y_max + 1, 3000))
            ax.yaxis.set_major_formatter(ticker.StrMethodFormatter('{x:,.0f}'))  # 格式化刻度
            ax.tick_params(axis='y', labelsize=8)
            ax.set_ylabel("Listings", fontsize=9)
            
            # 同时显示 X 轴刻度和标签
            ax.set_xticks(years)
            ax.set_xticklabels(["2019", "2024"], fontsize=9)
        else:
            # 隐藏 Y 轴刻度
            ax.set_yticks(range(0, y_max + 1, 3000))
            ax.tick_params(axis='y', labelsize=0)
            
            # 隐藏 X 轴刻度和标签
            ax.set_xticks(years)
            ax.tick_params(axis='x', labelsize=0)

        # 添加网格线
        ax.grid(visible=True, linestyle='--', linewidth=0.5, alpha=0.6)

# 添加全局图例
fig.subplots_adjust(bottom=0)  # 增加底部留白，将图例下移
fig.legend(
    color_mapping.keys(), loc="lower right", ncol=3, fontsize=12, 
    title="Room Type", title_fontsize=13, frameon=True
)
fig.suptitle("Number of Airbnb Listings in London Boroughs (2019 vs 2024)", fontsize=18, fontweight='bold')
plt.show()
```

## 

## 7. Drawing on your previous answers, and supporting your response with evidence (*e.g.* figures, maps, EDA/ESDA, and simple statistical analysis/models drawing on experience from, e.g., CASA0007), how *could* the InsideAirbnb data set be used to inform the regulation of Short-Term Lets (STL) in London?

::: duedate
( 45 points; Answer due {{< var assess.group-date >}} )
:::

## Sustainable Authorship Tools

Using the Terminal in Docker, you compile the Quarto report using `quarto render <group_submission_file>.qmd`.

Your QMD file should automatically download your BibTeX and CLS files and any other required files. If this is done right after library loading then the entire report should output successfully.

Written in Markdown and generated from [Quarto](https://quarto.org/). Fonts used: [Spectral](https://fonts.google.com/specimen/Spectral) (mainfont), [Roboto](https://fonts.google.com/specimen/Roboto) ([sansfont]{style="font-family:Sans-Serif;"}) and [JetBrains Mono](https://fonts.google.com/specimen/JetBrains%20Mono) (`monofont`).

## References
